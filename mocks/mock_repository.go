// Code generated by MockGen. DO NOT EDIT.
// Source: number-server/app/domain/repository (interfaces: NumberRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	model "number-server/app/domain/model"
	reflect "reflect"
)

// MockNumberRepository is a mock of NumberRepository interface
type MockNumberRepository struct {
	ctrl     *gomock.Controller
	recorder *MockNumberRepositoryMockRecorder
}

// MockNumberRepositoryMockRecorder is the mock recorder for MockNumberRepository
type MockNumberRepositoryMockRecorder struct {
	mock *MockNumberRepository
}

// NewMockNumberRepository creates a new mock instance
func NewMockNumberRepository(ctrl *gomock.Controller) *MockNumberRepository {
	mock := &MockNumberRepository{ctrl: ctrl}
	mock.recorder = &MockNumberRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNumberRepository) EXPECT() *MockNumberRepositoryMockRecorder {
	return m.recorder
}

// DeleteReport mocks base method
func (m *MockNumberRepository) DeleteReport() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteReport")
}

// DeleteReport indicates an expected call of DeleteReport
func (mr *MockNumberRepositoryMockRecorder) DeleteReport() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteReport", reflect.TypeOf((*MockNumberRepository)(nil).DeleteReport))
}

// Exists mocks base method
func (m *MockNumberRepository) Exists(arg0 *model.Number) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exists", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Exists indicates an expected call of Exists
func (mr *MockNumberRepositoryMockRecorder) Exists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exists", reflect.TypeOf((*MockNumberRepository)(nil).Exists), arg0)
}

// GetReport mocks base method
func (m *MockNumberRepository) GetReport() *model.Report {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReport")
	ret0, _ := ret[0].(*model.Report)
	return ret0
}

// GetReport indicates an expected call of GetReport
func (mr *MockNumberRepositoryMockRecorder) GetReport() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReport", reflect.TypeOf((*MockNumberRepository)(nil).GetReport))
}

// Save mocks base method
func (m *MockNumberRepository) Save(arg0 *model.Number) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockNumberRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockNumberRepository)(nil).Save), arg0)
}
